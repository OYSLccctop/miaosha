<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.3.4.RELEASE</version>
    </parent>

    <groupId>com.ccctop</groupId>
    <artifactId>miaosha</artifactId>
    <version>1.0-SNAPSHOT</version>
    <name>miaosha</name>

    <properties>
        <maven.compiler.target>1.8</maven.compiler.target>
        <maven.compiler.source>1.8</maven.compiler.source>
        <junit.version>5.6.2</junit.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <!--3、引入的第三个：java连接mysql的connector的jar包-->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.1.41</version>
        </dependency>
        <!--4、引入的第四个：阿里的德鲁伊连接池，管理mysql连接的jar包-->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid</artifactId>
            <version>1.1.3</version>
        </dependency>
        <!--5、引入的第五个：Mybatis相关的jar包-->
        <dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
            <version>1.3.1</version>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.16.18</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.7</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.hibernate.validator/hibernate-validator -->
        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>6.1.5.Final</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/joda-time/joda-time -->
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>2.9.9</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.session</groupId>
            <artifactId>spring-session-data-redis</artifactId>
            <version>2.0.5.RELEASE</version>
        </dependency>

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>18.0</version>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
<!--            &lt;!&ndash; 6、第六个引入的：mybatis的相关插件 &ndash;&gt;
            <plugin>
                <groupId>org.mybatis.generator</groupId>
                <artifactId>mybatis-generator-maven-plugin</artifactId>
                <version>1.3.5</version>
                &lt;!&ndash; 注意这里plugin下的dependencies，Maven是无法识别的 &ndash;&gt;
                &lt;!&ndash; 比较骚的操作就是，先把下面的dependency放到外面project下面的dependencies &ndash;&gt;
                &lt;!&ndash; 然后去右侧工具条Maven执行Reimport，最后再把这些dependency放回来，再进行Reimport，来导入mybatis的插件 &ndash;&gt;
                <dependencies>
                    &lt;!&ndash; 7、 第七个引入的：mybatis生成器的core相关jar包  &ndash;&gt;
                    <dependency>
                        <groupId>org.mybatis.generator</groupId>
                        <artifactId>mybatis-generator-core</artifactId>
                        <version>1.3.5</version>
                    </dependency>
                    &lt;!&ndash; 8、 在mybatis的插件里再引入一遍mysql的连接jar包 &ndash;&gt;
                    &lt;!&ndash; 上面曾经引入过，是服务端java代码与mysql连接 &ndash;&gt;
                    &lt;!&ndash; 这里再次声明，是mybatis插件和mysql连接 &ndash;&gt;
                    &lt;!&ndash; 虽说老师这么写了， 但我个人觉得没必要重复引入jar包啊 &ndash;&gt;
                    &lt;!&ndash; 老师给出的解释是：要生成的mybatis插件，需要借助相关的依赖 &ndash;&gt;
                    <dependency>
                        <groupId>mysql</groupId>
                        <artifactId>mysql-connector-java</artifactId>
                        <version>5.1.41</version>
                    </dependency>
                </dependencies>
                &lt;!&ndash; executions : 执行&ndash;&gt;
                &lt;!&ndash; 9、配置mybatis generator 插件的执行阶段phase以及执行目的goal &ndash;&gt;
                <executions>
                    <execution>
                        <id>mybatis generator</id>
                        <phase>package</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>
                &lt;!&ndash; 10、mybatis generator 插件的相关属性配置 &ndash;&gt;
                <configuration>
                    &lt;!&ndash; verbose : 冗余的 ， 允许移动生成的文件 &ndash;&gt;
                    <verbose>true</verbose>
                    &lt;!&ndash; 新生成的覆盖旧生成的，实际工作中慎用 &ndash;&gt;
                    <overwrite>false</overwrite>
                    &lt;!&ndash; 指定mybatis配置文件的路径 &ndash;&gt;
                    <configurationFile>src/main/resources/mybatis-generator.xml</configurationFile>
                </configuration>
            </plugin>-->
        </plugins>
    </build>
</project>